package FkHzOD_B_latest;

/**
 *
 * C++版：https://renjie.blog.csdn.net/article/details/131023562
 * B|25|找出两个整数数组中同时出现的整数|数据结构|100|
 * 现有两个整数数组，需要你找出两个数组中同时出现的整数，并按照如下要求输出:
 *
 * 有同时出现的整数时，先按照同时出现次数（整数在两个数组中都出现并目出现次数较少的那个）进行归类，然后按照出现次数从小到大依次按行输出。
 * 没有同时出现的整数时，输出NULL。
 * 输入描述
 * 第一行为第一个整数数组，第二行为第二个整数数组，每行数中整数与整数之间以英文号分，
 * 整数的取值范用为[-200, 200]，数组长度的范用为[1, 10000]之间的整数。
 * 输出描述
 * 按照出现次数从小到大依次按行输出，每行输出的格式为：
 * 出现次数:该出现次数下的整数升序排序的结果
 * 格式中的":"为英文冒号，整数间以英文逗号分隔。
 * 用例1
 * 输入
 * 5,3,6,-8,0,11
 * 2,8,8,8,-1,15
 * 输出
 * NULL
 *示例2：
 * 输入：
 * 5,8,11,3,6,8,8,-1,11,2,11,11
 * 11,2,11,8,6,8,8,-1,8,15,3,-9,11
 * 输出
 * 1:-1,2,3,6
 * 3:8,11
 * 说明
 * 两整数数组中同时出现的整数为-12、3、6、8、11,其中同时出现次数为1的整数为-1,2,3.6(升序排序),
 * 同时出现次数为3的整数为8,11(升序排序),先升序输出出现次数为1的整数，再升序输出出现次数为3的整数。
 *
 * 思路：map各种操作
 *
 * */
public class B25找出两个整数数组中同时出现的整数 {

}
